#!/bin/bash
#=== PREP ==========================================================================
dir1="/media/server/tvshows" # directory for tvshows
dir2="/home/pi/scripts/danflixr2" # directory for script files
dir3="$dir2/output" # directory for script output
dir4="$dir2/temp" # director for temporary script files
user=$(whoami)
sudo mkdir -p $dir2 $dir3 $dir4
sudo chmod 777 $dir2 $dir3 $dir4 && sudo chown $user:$user $dir2 $dir3 $dir4
sudo rm -f $dir4/*
function help { # dialog to be printed with the "help" option
	printf "DanFlixr analyzes TV show directories and uses epguides.com to find missing episodes
-NAMING TV SHOWS--(use this example when naming TV show directories)
	Game_of_Thrones // Season_01 // GameofThrones - s01e01.mp4
-SYNTAX--- $: danflixr [OPTIONS]
	--OPTIONS---------------------------
	-h	Display this help
	-o	Specify an output files
		e.g. $: danflixr -o output.txt
	-s	Run the program for 1 show (use its directory name)
		e.g. $: danflixr -s Game_of_Thrones
"
}
#=== STEP 0 ========================================================================
function step0 { # Count shows
	showcount=$(ls "$dir1" | wc -l)
}
#=== STEP 1 ========================================================================
function step1 { # Main loop
	for i in $(seq 1 $showcount) ; do
		if [[ "$oneshowvar" = "1" ]] ; then
			showorig=$oneshow
		else
#=== RENAME SHOWS ==================================================================
			showorig=$(ls "$dir1" | sed -n "$i"p)
		fi
		showcheck=$(echo $showorig | sed 's/_//g') # The show being analyzed in this run
		show=$showcheck
		showshow=$(ls "$dir1" | sed -n "$i"p | sed 's/_/ /g')
		if [ ${show:0:3} = "The" ] ; then # Remove "The" from beginnings
			show=${show:3}
		fi
		if [ $(echo $show | sed 's/.*\(..\)/\1/') = "US" ] || [ $(echo $show | sed 's/.*\(..\)/\1/') = "UK" ] ; then # Add underscore if a country code is at the end
			show=$(echo $show | sed 's/.\{2\}$/_&/')
			showshow=$(echo $showshow | sed 's/.\{2\}$/(&/' | sed 's/.\{0\}$/)&/')
		fi
		if [ ${#show} -gt 4 ] ; then # Add underscore if a year is at the end
			if [[ $(echo $show | sed 's/.*\(....\)/\1/') =~ ^[0-9]+$ ]] ; then
				show=$(echo $show | sed 's/.\{4\}$/_&/')
				showshow=$(echo $showshow | sed 's/.\{4\}$/(&/' | sed 's/.\{0\}$/)&/')
			fi
		fi
#=== GET EPISODE LISTS ==============================================================
		if [ -f "$dir1/$showorig/c" ] ; then # if show is marked "complete"
			continue
		fi
		if [ -f "$dir1/$showorig/id" ] ; then # if the show has an id already, extract it
			id=$(cat $dir1/$showorig/id)
		else # if it does not, get it
			sudo wget -q "http://www.epguides.com/${show}/" -O "$dir4/${show}_fullpage"
			id=$(grep "exportToCSVmaze" $dir4/${show}_fullpage)
			id=${id##*maze=} # delete string before id
			id=${id%%\"*} # delete string after id
			echo $id >> $dir1/$showorig/id # copy id to file in the show's directory
			sudo rm $dir4/${show}_fullpage
		fi
		sudo wget -q "http://www.epguides.com/common/exportToCSVmaze.asp?maze=$id" -O "$dir4/${show}_csv" # get the CSV page
		sudo sed -n -i '/<pre>/,/<\/pre>/p' $dir4/${show}_csv # extract
		sudo sed -i '/^\s*$/d' $dir4/${show}_csv # delete blank space
		sudo sed -i '/^S/d' $dir4/${show}_csv # delete rows with special episodes
		sudo sed -i '/^num/d' $dir4/${show}_csv # delete header row
		sudo sed -i '1d' $dir4/${show}_csv # delete the first row
		sudo sed -i '$d' $dir4/${show}_csv # delete the last row
		sudo awk -F',' '{printf("%02d,%02d,%s\n",$2,$3,$4)}' $dir4/${show}_csv > $dir4/tmp && sudo mv $dir4/tmp $dir4/${show}_csv
		today=$(date +'%Y%m%d')
		while :
		do
			airdate=$(cat $dir4/${show}_csv | sed '$!d' | awk -F',' '{print $3}')
			airdate=$(date -d"$airdate" +'%Y%m%d')
			if [ $airdate -ge $today ] ; then
				sudo sed -i '$ d' $dir4/${show}_csv
			else
				break
			fi
		done
		linecount=$(cat $dir4/${show}_csv | wc -l)
		for line in $(seq 01 $linecount) ; do
			season=$(cat $dir4/${show}_csv | awk -F',' -v line=$line 'FNR == line {print $1}')
			episode=$(cat $dir4/${show}_csv | awk -F',' -v line=$line 'FNR == line {print $2}')
			file=$(echo "$showcheck - s${season}e${episode}")
			sudo mkdir -p $dir1/$showorig/Season_$season
			if [ ! -f "$dir1/$showorig/Season_$season/$file".* ] ; then
				echo "${showshow} Season ${season} Episode ${episode}"
			fi
		done
	done
}
#=== OPTIONS ========================================================================
while getopts ":o:s:h" opt; do
	case $opt in
	o)	sudo rm -f $dir2/$OPTARG
		exec 1<&-
		exec 2<&-
		exec 1<>$dir2/$OPTARG
		exec 2>&1 ;;
	s)	oneshow=$OPTARG
		oneshowvar="1" ;;
	h)	help
		exit 1 ;;
	\?)	echo "Invalid option."
		exit 1 ;;
	:)	echo "Invalid option."
	esac
done
if [ "$oneshowvar" = "1" ] ; then
	showcount="1"
	step1
else
	step0
	step1
fi
