#!/bin/bash

function help { # this function displays help
echo "ImageManager is a simply script that imports photos from an SD card,
reformats the file names and uses these names to determine their destination.
SYNTAX----$: imagemanager [-OPTIONS]
	h:	Display this help
	s:	Run the script for a set of photos (versus RAW)
	c:	Rename images in current directory by Creation Date"
}
# The getopts part to call the -h (help) option
# Let's find our SD card
function mountsd {
	lsblk
	read -p "Type the drive number for the SD card (use sdb1 not sdb): " drive
	read -p "Is the drive already mounted somewhere? (Look at MOUNTPOINT) (y/n) " mountvar1
	if [[ $mountvar1 = "y" ]] ; then # if the sd card is already mounted
		echo "Unmounting.."
		sudo umount /dev/$drive # unmount it
		echo "Remounting.."
		sudo mount -o nonempty /dev/$drive $dir1 # remount it to the correct dir
	else # if the sd card is not mounted
		echo "Mounting.."
		sudo mount /dev/$drive /$dir1 # mount it
	fi
	lsblk
	read -p "Do you see your drive mounted correctly? (y/n) " mountvar2 # check that it worked
	if [[ $mountvar2 = "n" ]] ; then # if it didnt work
		echo "Something screwy going on around here. Figure it out and rerun the program."
		exit 1 # quit the program
	fi
}
function rawfunction { # function for raw images
	imagecount=$(ls $dir2/*.NEF | wc -l) # count the raw images
	if [[ $imagecount = "0" ]] ; then # if there are no images
		echo "No images found in directory."
		echo "Quitting.."
		exit 1 # quit
	else # if there are images
		echo "Found $imagecount images." # display how many images
	fi
	echo "Reformatting files.."
	# rename the files with the date (YYMMDD_##) and lowercase file extension
	sudo exiftool -d %y%m%d%%+.4nc.%%le "-filename<CreateDate" $dir2/*.NEF
	echo "Moving files.."
	# move the files to a directory (YYYYMM)
	sudo exiftool -d $dir3/%Y%m/ "-directory<CreateDate" $dir2/*.nef
	read -p "Delete original files? (y/n) " deletevar # delete original files?
	if [[ $deletevar = "y" ]] ; then # if yes
		sudo rm -f $dir2/*.nef # delete them
	fi
	read -p "Unmount the SD card? (y/n) " unmountvar # unmount the drive
	if [[ $unmountvar = "y" ]] ; then # if yes
		sudo umount /dev/$drive # unmount it
	fi
}
function setfunction { # function for images in the set folder
	imagecount=$(ls $dir2/* | wc -l) # count the images
	if [[ $imagecount = "0" ]] ; then # if there are no images
		echo "No images found in directory."
		echo "Quitting.."
		exit 1 # quit
	else # if there are images
		echo "Found $imagecount images." # display how many images
	fi
	echo "Reformatting files.."
	# rename the files with the date (YYMMDD_##) and lowercase file extension
	sudo exiftool -d %y%m%d%%+.4nc.%%le "-filename<CreateDate" $dir2/*
	echo "Moving files.."
	# move the files to a directory (YYYYMM)
	sudo exiftool -d $dir3/%Y/%m/$setdir/ "-directory<CreateDate" $dir2/*
	read -p "Delete original files? (y/n) " deletevar # delete original files?
	if [[ $deletevar = "y" ]] ; then # if yes
		sudo rm -f $dir2/* # delete them
	fi
	read -p "Unmount the SD card? (y/n) " unmountvar # unmount the drive
	if [[ $unmountvar = "y" ]] ; then # if yes
		sudo umount /dev/$drive # unmount it
	fi
}
function currentfunction { # function for images only in the current directory
	dircurrent=$(pwd)
	read -p "Are you in the directory where the images to be edited are located? (y/n) " currentvar
	if [ $currentvar = "n" ] ; then
		echo "Move to the desired directory and rerun the program."
		exit 1
	fi
	imagecount=$(ls $dircurrent/* | wc -l) # count the images
	if [[ $imagecount = "0" ]] ; then # if there are no images
		echo "No images found in directory."
		echo "Quitting.."
		exit 1 # quit
	else # if there are images
		echo "Found $imagecount images." # display how many images
	fi
	echo "Reformatting files..."
	ls $dircurrent/* | sudo xargs exiftool -d %y%m%d%%+.4nc.%%le "-filename<CreateDate"
}
# === SET VARIABLES ==========================================================
function setvariables {
	dir1="/media/sd" # dir the sd card will mount to
	if [ $setoption = "y" ] ; then # dir the original images are found
		dir2="$dir1/set"
		read -p "Enter directory name for set: " setdir
		dir3="/var/www/html/data/data/dwassall/files/media/image/sets/by_date"
	else
		dir2="$dir1/DCIM/100D5200"
		dir3="/var/www/html/data/data/dwassall/files/media/image/raw"
	fi
}
# === SCRIPT OPTIONS =========================================================
while getopts ":sch" opt; do # script options
	case $opt in
	s)	echo "Invoked SETS option."
		setoption="y"
		setvariables
		mountsd
		setfunction
		echo "ImageManager is done."
		exit 1 ;;
	c)	echo "Invoked CURRENT DIRECTORY option."
		currentfunction
		echo "ImageManager is done."
		exit 1 ;;
	h)	help
		exit 1 ;;
	\?)	echo "Invalid option."
		exit 1 ;;
	esac
done
# === RUN THE PROGRAM ========================================================
setvariables
mountsd # function that mounts the sd card
rawfunction # function that renames/moves raw images in the camera folder
echo "ImageManager is done."
