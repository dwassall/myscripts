#!/bin/bash
#=== PREPARE =================================================================
dir1="/home/pi/scripts/danflixr2/output" # name the directories
dir2="/home/pi/scripts/danflixr2/temp"
input=$1 # the file to be edited
file1="$dir1/$input" # the file variables
file2="$dir1/${input}_2"
file3="$dir1/${input}_3"
file4="$dir1/${input}_4"
sudo chmod 777 $file1 && sudo chown pi:pi $file1
#=== PRE-LOOP ================================================================
rowcount=$(cat $file1 | wc -l) # count the rows in the file
rowcount=$(($rowcount + 1)) # add 1
show1=$(cat $file1 | awk 'FNR == 1 {NF-=4; print}') # define the variables
season1=$(cat $file1 | awk 'FNR == 1 {print $(NF-2)}')
episode1=$(cat $file1 | awk 'FNR == 1 {print $(NF-0)}')
multi="n"
#=== MAIN LOOP (group episodes by season) ====================================
for i in $(seq 2 $rowcount); do # start on row 2
show2=$(cat $file1 | awk -v i=$i 'FNR == i {NF-=4; print}') # define current row variables
season2=$(cat $file1 | awk -v i=$i 'FNR == i {print $(NF-2)}')
episode2=$(cat $file1 | awk -v i=$i 'FNR == i {print $(NF-0)}')
if [ "$episode1" != "EpGuides.com." ] ; then # make sure this isn't a "did not come up on epguides" message
	episode1plus1=$((${episode1#0} + 1)) # add 1 to the current episode
	episode1plus1=$(printf %02d $episode1plus1)
fi
# Q1 : Is this the next episode? (Do show/season match and is the new episode 1 greater than the previous?)
if [ "$show2" == "$show1" ] && [ "$season2" = "$season1" ] && [ "$episode1plus1" = "$episode2" ] ; then # Q1: YES
# Q2a : Were we in the middle of a run of repeats? (Was multi set to y?)
	if [ "$multi" = "y" ] ; then # Q2a: YES
		multi="y" # keep multi as y since we are still in a sequence (determined by Q1)
	elif [ "$multi" = "n" ] ; then # Q2a: NO
		epstart=$episode1 # then we're at the first row of a sequence ; set the previous episode number as the start
		multi="y" # then set multi to y to signify a sequence
	fi
else # Q1: NO
# Q2b : Were we in the middle of a run of repeats? (Was multi set to y?)
	if [ "$multi" = "y" ] ; then # Q2b: YES
		epend=$episode1 # then we're at the end of a sequence; set the previous episode number as the end
		sudo echo "$show1 Season $season1 Episodes $epstart - $epend" >> $file2 #export the start and end episode to new file
		if [ "$episode2" = "EpGuides.com." ] ; then # if the current line is just a "did not come up on epguides" message...
			multi="skip" # set multi to skip
			skip=$(cat $file1 | awk -v i=$i 'FNR == i') # expor the previous line as it stands to a new file
			echo "$skip" >> $file2
		else
			multi="n" # change the multi to n since we are not in a repeat anymore
		fi
 	elif [ "$multi" = "n" ] ; then # Q2b: NO
		sudo echo "$show1 Season $season1 Episode $episode1" >> $file2 # so export the previous line as is
		if [ "$episode2" = "EpGuides.com." ] ; then # same thing again if the line is an "epguides" message
			multi="skip"
			skip=$(cat $file1 | awk -v i=$i 'FNR == i')
			echo "$skip" >> $file2
		else
			multi="n"
		fi
	elif [ "$multi" = "skip" ] ; then # if this is a skip line, we print nothing and move on
		multi="n"
	fi
fi
	show1=$show2 # change the variables before going through the run again
	season1=$season2
	episode1=$episode2
done
#=== SECOND LOOP (detect complete seasons) ============================================
rowcount=$(cat $file2 | wc -l)
for i in $(seq 1 $rowcount); do # this will go through the file line by line
	row=$(cat $file2 | awk -v i=$i 'NR == i') # set the row as a string
	if [[ $row == *"-"* ]] ; then # detect if there is an episode span in the row
		showorig=$(cat $file2 | awk -v i=$i 'FNR == i {NF-=6; print}') # define variables
		season=$(cat $file2 | awk -v i=$i 'FNR == i {print $(NF-4)}')
		epstart=$(cat $file2 | awk -v i=$i 'FNR == i {print $(NF-2)}')
		epend=$(cat $file2 | awk -v i=$i 'FNR == i {print $(NF-0)}')
		show=$(echo $showorig | sed 's/ //g' | sed 's/(//g' | sed 's/)//g') # manipulate the show string
		if [ ${show:0:3} = "The" ] ; then
			show=${show:3}
		fi
		if [ ${show: -2} == "US" ] || [ ${show: -2} == "UK" ] ; then
			show=$(echo $show | sed 's/.\{2\}$/_&/')
		fi
		if [ ${#show} -gt 4 ] ; then
			if [[ ${show: -4} =~ ^[0-9]+$ ]] ; then
				show=$(echo $show | sed 's/.\{4\}$/_&/')
			fi
		fi
		csvrowcount=$(cat $dir2/${show}_csv | wc -l)
		sudo rm -f $dir2/${show}_csv2
		for i in $(seq 2 $csvrowcount); do
			csvseason=$(cat $dir2/${show}_csv | awk -F',' -v i=$i 'FNR == i {print $1}')
			csvepisode=$(cat $dir2/${show}_csv | awk -F',' -v i=$i 'FNR == i {print $2}')
			if [ $csvepisode = "01" ] ; then
				lasti=$(($i - 1))
				lastrow=$(cat $dir2/${show}_csv | awk -v lasti=$lasti 'NR == lasti')
				echo "$lastrow" >> $dir2/${show}_csv2
			fi
		done
		reallastrow=$(cat $dir2/${show}_csv | awk 'END { print }')
		echo "$reallastrow" >> $dir2/${show}_csv2
		realepend=$(cat $dir2/${show}_csv2 | awk -F',' -v season=$season '$1==season{print $2}')
		if [ "$epend" = "$realepend" ] && [ "$epstart" = "01" ] ; then
			echo "$row COMPLETE" >> $file3
		else
			echo "$row" >> $file3
		fi
	else
		echo "$row" >> $file3
	fi
done
#=== LOOP 2b (group non-sequential episodes to same season line) =================================
loop2multi="n"
rowcount=$(cat $file3 | wc -l)
for i in $(seq 1 $rowcount); do
	lasti=$(($i - 1))
	completecheck=$(cat $file3 | awk -v i=$i 'FNR == i {print $(NF-0)}') # set last word of line to a variable
	lastcompletecheck=$(cat $file3 | awk -v lasti=$lasti 'FNR == lasti {print $(NF-0)}')
	row=$(cat $file3 | awk -v i=$i 'NR == i') # set the row as a string
	lastrow=$(cat $file3 | awk -v lasti=$lasti 'NR == lasti') # set the previous row as a string
	if [ "$completecheck" = "COMPLETE" ] ; then # check if this row contains a complete season
		if [ "$loop2multi" = "y" ] ; then # if this is y, this is the end of a run
			echo "$newrow" >> $file4 # so print the line generated
			echo "$row" >> $file4 # print the current line
			loop2multi="n"
			continue # and move on to the next row
		else # if this is n, then this row stands alone
			if [ "$lastcompletecheck" = "COMPLETE" ] ; then # if the last line was complete, we just need to print the current row
				echo "$row" >> $file4
			else # if it wasn't, the previous row and the current row need to be both be printed
				echo "$lastrow" >> $file4 # print the previous row
				echo "$row" >> $file4 # print the row as is to a new file
			fi
			loop2multi="n"
			continue # and move onto the next row
		fi
	else # if its not check we need to see if this is part of a sequence
		if [ "$lastcompletecheck" = "COMPLETE" ] ; then # if the previous line was COMPLETE, then this is not part of a sequence
			if [ "$i" = "$rowcount" ] ; then
				echo "$row" >> $file4
			else
				continue # so move on to the next row
			fi
		else # if it wasnt then this may be in the middle of a sequence, so let's define variables
			if [[ $lastrow == *"-"* ]] ; then # detect if there is an episode span in the previous row
				loop2show1=$(cat $file3 | awk -v lasti=$lasti 'FNR == lasti {NF-=6; print}') # define previous row variables
				loop2season1=$(cat $file3 | awk -v lasti=$lasti 'FNR == lasti {print $(NF-4)}')
			else # if there wasnt variables will be defined differently
				loop2show1=$(cat $file3 | awk -v lasti=$lasti 'FNR == lasti {NF-=4; print}') # define previous row variables
				loop2season1=$(cat $file3 | awk -v lasti=$lasti 'FNR == lasti {print $(NF-2)}')
			fi
			if [[ $row == *"-"* ]] ; then # detect if there is an episode span in the current row
				loop2show2=$(cat $file3 | awk -v i=$i 'FNR == i {NF-=6; print}') # define current row variables
				loop2season2=$(cat $file3 | awk -v i=$i 'FNR == i {print $(NF-4)}')
				loop2epstart2=$(cat $file3 | awk -v i=$i 'FNR == i {print $(NF-2)}')
				loop2epend2=$(cat $file3 | awk -v i=$i 'FNR == i {print $(NF-0)}')
			else # if there wasnt variables will be defined differently
				loop2show2=$(cat $file3 | awk -v i=$i 'FNR == i {NF-=4; print}') # row variables
				loop2season2=$(cat $file3 | awk -v i=$i 'FNR == i {print $(NF-2)}')
				loop2episode2=$(cat $file3 | awk -v i=$i 'FNR == i {print $(NF-0)}')
			fi
			if [ "$loop2show1" = "$loop2show2" ] && [ "$loop2season2" = "$loop2season1" ] ; then # is this row part of a run of same-season/same-show?
				if [ "$loop2multi" = "y" ] ; then # if its a sequence, were we in the middle of a run? if we were..
					if [[ $row == *"-"* ]] ; then #figure out if the current row is an episode span..
						newrow="$newrow, ${loop2epstart2}-$loop2epend2" # if it is print this
						loop2multi="y" # tell it we're in the middle of a run
						continue # and move to the next row
					else # if its not an episode span..
						newrow="$newrow, $loop2episode2" # print this
						loop2multi="y" # remind it were in the middle of a run
						continue # and move on to the next row
					fi
				else # if we were not in the middle of a run, then we've discovered the start of a run (on the previous row)
					lastrow=$(echo "$lastrow" | sed 's/Episode /Episodes /g')
					if [[ $row == *"-"* ]] ; then # so figure out if this row is an episode span
						newrow="$lastrow, ${loop2epstart2}-$loop2epend2" # if it is print this
						loop2multi="y" # change this to tell it this is the start of a run
						continue # and move to the next row
					else # if its not an episode span
						newrow="$lastrow, $loop2episode2" # print this
						loop2multi="y" # define the run variable
						continue # and move on
					fi
				fi
			else # if this is row is not a run (not the same-show/same-season)
				if [ "$loop2multi" = "y" ] ; then # figure out if this was the middle of a run, if it was, then the previous row is the end
					echo "$newrow" >> $file4 # so export the run to the file
					loop2multi="n" # tell it this is no longer a run
					continue # and move on
				else # if this was not part of a run, then the previous row stands alone
					echo "$lastrow" >> $file4 # so print the previous row to the file
					loop2multi="n" # remind it that we're not in a run
					continue # and move on
				fi
			fi
		fi
	fi
done
cp $file4 ${file3}b
mv $file3 ${file3}a
mv $file4 $file3
#=== LOOP 3 (group complete seasons) =========================================================
loop3multi="n"
rowcount=$(cat $file3 | wc -l)
for i in $(seq 1 $rowcount); do # this will go through the file line by line
	fullrow=$(cat $file3 | awk -v i=$i 'NR == i')
	completecheck=$(cat $file3 | awk -v i=$i 'FNR == i {print $(NF-0)}')
	lasti=$(($i - 1))
	lastcompletecheck=$(cat $file3 | awk -v lasti=$lasti 'FNR == lasti {print $(NF-0)}')
	if [ "$completecheck" = "COMPLETE" ] ; then # check if this row contains a complete season
		if [ "$lastcompletecheck" = "COMPLETE" ] ; then # check if the last row was a complete row
			loop3show1=$(cat $file3 | awk -v lasti=$lasti 'FNR == lasti {NF-=7; print}') # define previous row variables
			loop3season1=$(cat $file3 | awk -v lasti=$lasti 'FNR == lasti {print $(NF-5)}')
		else
			continue
		fi
		loop3show2=$(cat $file3 | awk -v i=$i 'FNR == i {NF-=7; print}') # define current row variables
		loop3season2=$(cat $file3 | awk -v i=$i 'FNR == i {print $(NF-5)}')
		loop3season1plus1=$((${loop3season1#0} + 1))
		loop3season1plus1=$(printf %02d $loop3season1plus1)
		if [ "$loop3show1" = "$loop3show2" ] && [ "$loop3season2" = "$loop3season1plus1" ] ; then # is this row sequential?
			if [ "$loop3multi" = "y" ] ; then # ... and were we in the middle of a sequence? if we were...
				if [ $i = $rowcount ] ; then # if were on the last row
					echo "$loop3show1 Seasons $loop3seasonstart - $loop3season2" >> $file4 # print the sequence
				else # if were not on the last row
					loop3multi="y" # continue the sequence to the next line
				fi
			else # if we weren't in the middle of a sequence then this is the beginning of a sequence
				if [ $i = $rowcount ] ; then # if were on the last row
					echo "$loop3show1 Seasons $loop3season1 - $loop3season2" >> $file4 # print the last row and this row
				else # if were not on the last row
					loop3seasonstart=$loop3season1 # so the first season of this sequence is the one from the previous row
					loop3multi="y" # continue the sequence to the next line
				fi
			fi
		else # if this row is not sequential..
			if [ "$loop3multi" = "y" ] ; then # were we in the middle of a sequence? if we were, we've now found the end
#				so the season in the last row is the ending season of the sequence
				echo "$loop3show1 Seasons $loop3seasonstart - $loop3season1" >> $file4 # so print the following
			else # if we weren't in a sequence, then the last row stands alone
				echo "$loop3show1 Season $loop3season1" >> $file4 # so print the previous line, condensing it
			fi
			loop3multi="n"
		fi
	else # if the current row does not contain complete
		if [ "$loop3multi" = "y" ] ; then # check if this is the end of a run
			lasti=$(($i - 1))
			loop3show1=$(cat $file3 | awk -v lasti=$lasti 'FNR == lasti {NF-=7; print}') # define previous row variables
			loop3season1=$(cat $file3 | awk -v lasti=$lasti 'FNR == lasti {print $(NF-5)}')
			echo "$loop3show1 Seasons $loop3seasonstart - $loop3season1" >> $file4 # print the season sequence
			echo "$fullrow" >> $file4
			loop3multi="n" # tell it that this is the end of a sequence
			printalready="n"
		elif [ "$loop3multi" = "n" ] && [ "$lastcompletecheck" = "COMPLETE" ] ; then
			lasti=$(($i - 1))
			lastfullrowseasononly=$(cat $file3 | awk -v lasti=$lasti 'FNR == lasti {NF-=5; print}') # last full row season only
			echo "$lastfullrowseasononly" >> $file4
			echo "$fullrow" >> $file4
		else # if this is not the middle of a sequence, just print the line as is
			echo "$fullrow" >> $file4 # if it doesn't, print the line as is
			printalready="y"
		fi
	fi
done
sed -i '/^\s*$/d' $file4
sed -i 's/ 0*/ /g' $file4
sed -i 's/-0*/-/g' $file4
sed -i 's/ - /-/g' $file4
#=== CLEAN UP =========================================================================
if [ -f $file4 ] ; then
	sudo rm $file1 $file2 $file3
	sudo mv $file4 $file1
else
	echo "FileFix error: File wasn't created" >> $file2
	sudo mv $file1 ${file1}_copy
	sudo mv $file2 $file1
fi
